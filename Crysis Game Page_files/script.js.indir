<html>
<head>
    <title>Crysis Game Page</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.2.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.2.1/firebase-firestore.js"></script>
    <script src="script.js"></script>
    <style>
        .container {
            margin-top: 20px;
        }

        .card {
            margin-bottom: 20px;
            border: none; 
        }

        .carousel-item img {
            height: 400px;
            object-fit: cover;
            border-radius: 5px;
        }
        
        .game-videos-carousel {
            height: 400px;
            object-fit: auto;
            border-radius: 10px;
        }


/* 
        .video-container iframe,
        .video-container object,
        .video-container embed {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        } */

        /* Dark mode styles */
        body.dark-mode {
            background-color: #131313;
            color: #fff;
        }

        body.dark-mode .card {
            /* background-color: #13131362; */
            background-color: #13131300;
            color: #fff;
        }

        body.dark-mode .card-title {
            color: #fff;
        }

        body.dark-mode .card-text {
            color: #ccc;
        }

        body.dark-mode .nav-tabs .nav-link {
            color: #fff;
        }

        body.dark-mode .nav-tabs .nav-link.active {
            background-color: #13131300;
            color: #fff;
        }

        body.dark-mode .list-group-item {
            background-color: #13131300;
            color: #fff;
        }

        body.dark-mode .table {
            background-color: #13131300;
            color: #fff;
        }

        body.dark-mode .table th {
            color: #fff;
        }

        body.dark-mode .table td {
            color: #fff;
        }

        body {
            /* background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.1) 10%, rgba(0, 0, 0, 0.9) 90%), url("https://images.contentstack.io/v3/assets/bltb6530b271fddd0b1/bltc655d62fc92e4acd/649bdd9094be10f2698941ed/071123_Val_EP7_China_CG_Banner.jpg?auto=webp&disable=upscale&height=549"); */
            background-blend-mode: overlay;
            background-size: cover;

            /* backdrop-filter: blur(15px); */
            background-repeat: no-repeat;
            background-position: center;
            opacity: 1;
            background-attachment: fixed;
            font-family: "Segoe UI Light";
        }
    </style>
    <!-- <div class="custom-control custom-switch">
        <input type="checkbox" class="custom-control-input" id="darkModeSwitch">
        <label class="custom-control-label" for="darkModeSwitch">Light Mode</label>
    </div> -->
    
</head>
<body>
    
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div id="game-carousel" class="carousel slide" data-ride="carousel">
                    <ol class="carousel-indicators">
                        <!-- Carousel indicators will be added dynamically -->
                    </ol>
                    <div class="carousel-inner">
                        <!-- Carousel items will be added dynamically -->
                    </div>
                    <a class="carousel-control-prev" href="#game-carousel" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#game-carousel" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
                
                <div class="card">
                    <div class="card-body">
                        <!-- <h5 class="card-title">Game Summary</h5> -->
                        <p class="card-text" id="game-summary">
                            <!-- Game summary will be added dynamically -->
                        </p>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <p class="card-text" id="game-desc"></p>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Game Videos</h5>
                        <div id="game-videos-carousel" class="carousel slide" data-ride="carousel">
                            <ol class="carousel-indicators" id="video-carousel-indicators">
                            </ol>
                            <div class="carousel-inner" id="video-carousel-inner">
                            </div>
                            <a class="carousel-control-prev" href="#game-videos-carousel" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#game-videos-carousel" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <!-- <h5 class="card-title">Game Details</h5> -->
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item"><strong>Name:</strong> <span id="game-name"></span></li>
                            <li class="list-group-item"><strong>Release Date:</strong> <span id="game-release-date"></span></li>
                            <li class="list-group-item"><strong>Version:</strong> <span id="game-version"></span></li>
                            <li class="list-group-item"><strong>Age Rating:</strong> <span id="game-age-rating"></span></li>
                            <li class="list-group-item"><strong>Platforms:</strong> <span id="game-platforms"></span></li>
                            <li class="list-group-item"><strong>Themes:</strong> <span id="game-themes"></span></li>
                            <li class="list-group-item"><strong>Engine:</strong> <span id="game-engine"></span></li>
                            <li class="list-group-item"><strong>Genre:</strong> <span id="game-genre"></span></li>
                            <li class="list-group-item"><strong>Publisher:</strong> <span id="game-publisher"></span></li>
                            <li class="list-group-item"><strong>Developer:</strong> <span id="game-developer"></span></li>

                            <table class="table" id="language-table">
                                <thead>
                                    <tr>
                                        <th>Language</th>
                                        <th>Text</th>
                                        <th>Sound</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Table content will be added dynamically -->
                                </tbody>
                            </table>
                        </ul>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">System Requirements</h5>
                        <ul class="nav nav-tabs" id="system-req-tabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <a class="nav-link active" id="minimum-tab" data-toggle="tab" href="#minimum" role="tab" aria-controls="minimum" aria-selected="true">Minimum</a>
                            </li>
                            <li class="nav-item" role="presentation">
                                <a class="nav-link" id="recommended-tab" data-toggle="tab" href="#recommended" role="tab" aria-controls="recommended" aria-selected="false">Recommended</a>
                            </li>
                        </ul>
                        <div class="tab-content" id="system-req-content">
                            <div class="tab-pane fade show active" id="minimum" role="tabpanel" aria-labelledby="minimum-tab">
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item"><strong>CPU:</strong> <span id="game-cpu-min"></span></li>
                                    <li class="list-group-item"><strong>GPU:</strong> <span id="game-gpu-min"></span></li>
                                    <li class="list-group-item"><strong>RAM:</strong> <span id="game-ram-min"></span></li>
                                    <li class="list-group-item"><strong>Note:</strong> <span id="game-note-min"></span></li>
                                </ul>
                            </div>
                            <div class="tab-pane fade" id="recommended" role="tabpanel" aria-labelledby="recommended-tab">
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item"><strong>CPU:</strong> <span id="game-cpu-rec"></span></li>
                                    <li class="list-group-item"><strong>GPU:</strong> <span id="game-gpu-rec"></span></li>
                                    <li class="list-group-item"><strong>RAM:</strong> <span id="game-ram-rec"></span></li>
                                    <li class="list-group-item"><strong>Note:</strong> <span id="game-note-rec"></span></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Buy Game</h5>
                        <div id="game-store">
                            <!-- Game store links will be added dynamically -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
                // Toggle dark mode
        function toggleDarkMode() {
            document.body.classList.toggle('dark-mode');
        }
        toggleDarkMode();
        gameName = decodeHashTagFromURL();
        console.log(gameName);
        // Fetch data from the backend endpoint
        function decodeHashTagFromURL() {
            const url = window.location.href;
            const game = decodeURIComponent(url.substring(url.lastIndexOf('/') + 1));
            return game;
        }
        decodeHashTagFromURL();
        
        fetch('http://localhost:3000/getGames/'+gameName)
            .then(response => response.json())
            .then(data => {
                // Update the HTML elements with the fetched data
                document.getElementById('game-name').textContent = data.name;
                document.getElementById('game-summary').textContent = data.summary;
                document.getElementById('game-desc').innerHTML = data.desc.replace(/\\n/g, '<br>');
                document.getElementById('game-release-date').textContent = new Date(data.releaseDate._seconds * 1000).toLocaleDateString();
                document.getElementById('game-version').textContent = data.version;
                document.getElementById('game-age-rating').textContent = data.agerating;

                var platforms = data.platforms.map(function(platform) {
                    if (platform === 'windows') {
                        return 'Windows';
                    } else if (platform === 'xboxseriesx') {
                        return 'Xbox Series X';
                    } else if (platform === 'android') {
                        return 'Android';   
                    } else {
                        return platform;
                    }
                });
                document.getElementById('game-platforms').textContent = platforms.join(', ');

                var themes = data.themes.map(function(theme) {
                    if (theme === 'fantasy') {
                        return 'Fantasy';
                    } else if (theme === 'scifi') {
                        return 'Sci-fi';
                    } else if (theme === 'sci-fi') {
                        return 'Sci-Fi';
                    } else if (theme === 'historical') {
                        return 'Historical';
                    } else if (theme === 'horror') {
                        return 'Horror';
                    } else if (theme === 'war') {
                        return 'War';
                    } else if (theme === 'western') {
                        return 'Western';
                    } else if (theme === 'thriller') {
                        return 'Thriller';
                    } else if (theme === 'survival') {
                        return 'Survival';
                    } else if (theme === 'adult') {
                        return 'Adult';
                    } else if (theme === 'mystery') {
                        return 'Mystery';
                    } else if (theme === 'party') {
                        return 'Party';
                    } else if (theme === 'noir') {
                        return 'Noir';
                    } else if (theme === 'romance') {
                        return 'Romance';
                    } else if (theme === 'business') {
                        return 'Business';
                    } else if (theme === 'comedy') {
                        return 'Comedy';
                    } else if (theme === 'sandbox') {
                        return 'Sandbox';
                    } else if (theme === 'educational') {
                        return 'Educational';
                    } else if (theme === 'kids') {
                        return 'Kids';
                    } else if (theme === 'openworld') {
                        return 'Open World';
                    } else if (theme === 'historical') {
                        return 'Historical';
                    } else if (theme === 'survivalhorror') {
                        return 'Survival Horror';
                    } else if (theme === 'visualnovel') {
                        return 'Visual Novel';
                    } else if (theme === 'pointandclick') {
                        return 'Point and Click';
                    } else if (theme === 'roguelike') {
                        return 'Roguelike';
                    } else if (theme === 'tactical') {
                        return 'Tactical';
                    } else if (theme === 'turnbased') {
                        return 'Turn Based';
                    } else if (theme === 'card') {
                        return 'Card';
                    } else if (theme === 'educational') {
                        return 'Educational';
                    } else if (theme === 'party') {
                        return 'Party';
                    } else {
                        return theme;
                    }
                });
                document.getElementById('game-themes').textContent = themes.join(', ');

                let engine;
                if (data.engine === 'unrealengine4') {
                    engine = 'Unreal Engine 4';
                } else if (data.engine === 'unity') {
                    engine = 'Unity';
                } else if (data.engine === 'cryengine5') {
                    engine = 'CryEngine 5';
                } else if (data.engine === 'unrealengine3') {
                    engine = 'Unreal Engine 3';
                } else if (data.engine === 'unity5') {
                    engine = 'Unity 5';
                } else if (data.engine === 'unity2018') {
                    engine = 'Unity 2018';
                } else if (data.engine === 'unity2019') {
                    engine = 'Unity 2019';
                } else if (data.engine === 'unity2020') {
                    engine = 'Unity 2020';
                } else if (data.engine === 'unity2021') {
                    engine = 'Unity 2021';
                } else if (data.engine === 'unity2022') {
                    engine = 'Unity 2022';
                } else if (data.engine === 'unity2023') {
                    engine = 'Unity 2023';
                } else if (data.engine === 'unity2024') {
                    engine = 'Unity 2024';
                } else if (data.engine === 'unity2025') {
                    engine = 'Unity 2025';
                } else if (data.engine === 'cryengine2') {
                    engine = 'CryEngine 2';
                } else if (data.engine === 'cryengine3') {
                    engine = 'CryEngine 3';
                } else if (data.engine === 'gamemaker') {
                    engine = 'GameMaker';
                } else if (data.engine === 'lumberyard') {
                    engine = 'Lumberyard';
                } else if (data.engine === 'null' || data.engine === '') {
                    engine = 'Unknown';
                } else if (data.engine === 'rage') {
                    engine = 'RAGE';
                } else if (data.engine === 'godot') {
                    engine = 'Godot';
                } else if (data.engine === 'decima') {
                                    engine = 'Decima';
                                } else {
                                    engine = data.engine;
                                }
                                document.getElementById('game-engine').textContent = engine;

                                var genre = data.themes.map(function(theme) {
                                    if (theme === 'shooter') {
                                        return 'Shooter';
                                    } else if (theme === 'fps') {
                                        return 'FPS';
                                    } else if (theme === 'TPS') {
                                        return 'TPS';
                                    } else if (theme === 'action') {
                                        return 'Action';
                                    } else if (theme === 'adventure') {
                                        return 'Adventure';
                                    } else if (theme === 'rpg') {
                                        return 'RPG';
                                    } else if (theme === 'strategy') {
                                        return 'Strategy';
                                    } else if (theme === 'simulation') {
                                        return 'Simulation';
                                    } else if (theme === 'sports') {
                                        return 'Sports';
                                    } else if (theme === 'racing') {
                                        return 'Racing';
                                    } else if (theme === 'fighting') {
                                        return 'Fighting';
                                    } else if (theme === 'horror') {
                                        return 'Horror';
                                    } else if (theme === 'stealth') {
                                        return 'Stealth';
                                    } else if (theme === 'survival') {
                                        return 'Survival';
                                    } else if (theme === 'battleroyale') {
                                        return 'Battle Royale';
                                    } else if (theme === 'platformer') {
                                        return 'Platformer';
                                    } else if (theme === 'puzzle') {
                                        return 'Puzzle';
                                    } else if (theme === 'arcade') {
                                        return 'Arcade';
                                    } else if (theme === 'indie') {
                                        return 'Indie';
                                    } else if (theme === 'mmo') {
                                        return 'MMO';
                                    } else if (theme === 'mmorpg') {
                                        return 'MMORPG';
                                    } else if (theme === 'sandbox') {
                                        return 'Sandbox';
                                    } else if (theme === 'openworld') {
                                        return 'Open World';
                                    } else if (theme === 'survivalhorror') {
                                        return 'Survival Horror';
                                    } else if (theme === 'visualnovel') {
                                        return 'Visual Novel';
                                    } else if (theme === 'pointandclick') {
                                        return 'Point and Click';
                                    } else if (theme === 'roguelike') {
                                        return 'Roguelike';
                                    } else if (theme === 'tactical') {
                                        return 'Tactical';
                                    } else if (theme === 'turnbased') {
                                        return 'Turn Based';
                                    } else if (theme === 'card') {
                                        return 'Card';
                                    } else if (theme === 'educational') {
                                        return 'Educational';
                                    } else if (theme === 'party') {
                                        return 'Party';
                                    } else {
                                        return theme;
                                    }
                                });
                                document.getElementById('game-genre').textContent = data.genre.join(', ');

                                document.getElementById('game-publisher').textContent = data.publisher.join(', ');
                                document.getElementById('game-developer').textContent = data.developer.join(', ');
                                // document.getElementById('game-language').textContent = data.lang.text.join(', ');
                                var table = document.getElementById('language-table');
                                var tbody = table.getElementsByTagName('tbody')[0];

                                // Get unique languages
                                var languages = Array.from(new Set(data.lang.text.concat(data.lang.sound)));

                                // Populate table
                                languages.forEach(function (language) {
                                    var row = tbody.insertRow();
                                    var cellLanguage = row.insertCell(0);
                                    var cellText = row.insertCell(1);
                                    var cellSound = row.insertCell(2);

                                    cellLanguage.textContent = language;
                                    cellText.textContent = data.lang.text.includes(language) ? '✔️' : '❌';
                                    cellSound.textContent = data.lang.sound.includes(language) ? '✔️' : '❌';
                                });
                                document.getElementById('game-cpu-min').textContent = data.systemreq.CPU.minimum;
                                document.getElementById('game-gpu-min').textContent = data.systemreq.GPU.minimum;
                                document.getElementById('game-ram-min').textContent = data.systemreq.RAM.minimum;
                                document.getElementById('game-note-min').textContent = data.systemreq.note.minimum;

                                document.getElementById('game-cpu-rec').textContent = data.systemreq.CPU.recommended;
                                document.getElementById('game-gpu-rec').textContent = data.systemreq.GPU.recommended;
                                document.getElementById('game-ram-rec').textContent = data.systemreq.RAM.recommended;
                                document.getElementById('game-note-rec').textContent = data.systemreq.note.recommended;

                                // Add carousel indicators
                                const carouselIndicators = document.querySelector('.carousel-indicators');
                                data.images.forEach((image, index) => {
                                    const indicator = document.createElement('li');
                                    indicator.setAttribute('data-target', '#game-carousel');
                                    indicator.setAttribute('data-slide-to', index);
                                    if (index === 0) {
                                        indicator.classList.add('active');
                                    }
                                    carouselIndicators.appendChild(indicator);
                                });

                                // Add carousel items
                                const carouselItems = document.querySelector('.carousel-inner');
                                data.images.forEach((image, index) => {
                                    const item = document.createElement('div');
                                    item.classList.add('carousel-item');
                                    if (index === 0) {
                                        item.classList.add('active');
                                    }
                                    const img = document.createElement('img');
                                    img.setAttribute('src', image);
                                    img.classList.add('d-block', 'w-100');
                                    item.appendChild(img);
                                    carouselItems.appendChild(item);
                                });


                                // Add carousel indicators for videos
                                const videoCarouselIndicators = document.getElementById('video-carousel-indicators');
                                data.videos.forEach((video, index) => {
                                    const indicator = document.createElement('li');
                                    indicator.setAttribute('data-target', '#game-videos-carousel');
                                    indicator.setAttribute('data-slide-to', index);
                                    if (index === 0) {
                                        indicator.classList.add('active');
                                    }
                                    videoCarouselIndicators.appendChild(indicator);
                                });
                                // ...

                                // Add carousel items for videos
                                const videoCarouselInner = document.getElementById('video-carousel-inner');
                                data.videos.forEach((video, index) => {
                                    const videoContainer = document.createElement('div');
                                    videoContainer.classList.add('carousel-item');
                                    if (index === 0) {
                                        videoContainer.classList.add('active');
                                    }

                                    const videoWrapper = document.createElement('div');
                                    videoWrapper.classList.add('embed-responsive', 'embed-responsive-16by9');

                                    const iframe = document.createElement('iframe');
                                    iframe.classList.add('embed-responsive-item');
                                    
                                    const videoId = video.split('v=')[1];
                                    const embedLink = `https://www.youtube.com/embed/${videoId}`;
                                    iframe.setAttribute('src', embedLink);
                                    iframe.setAttribute('allowfullscreen', true);

                                    videoWrapper.appendChild(iframe);
                                    videoContainer.appendChild(videoWrapper);
                                    videoCarouselInner.appendChild(videoContainer);
                                });

                                // ...






                                // // Add game videos
                                // const gameVideos = document.getElementById('game-videos');
                                // data.videos.forEach(video => {
                                //     const videoContainer = document.createElement('div');
                                //     videoContainer.classList.add('video-container');
                                //     const iframe = document.createElement('iframe');
                                //     const videoId = video.split('v=')[1];
                                //     const embedLink = `https://www.youtube.com/embed/${videoId}`;
                                //     iframe.setAttribute('src', embedLink);
                                //     iframe.setAttribute('allowfullscreen', true);
                                //     videoContainer.appendChild(iframe);
                                //     gameVideos.appendChild(videoContainer);
                                // });

                                // Add game store links         
                                var bodyElement = document.body;

                                // Background image stilini değiştir
                                const randomIndex = Math.floor(Math.random() * data.images.length);
                                // bodyElement.style.backgroundImage = 'url("' + data.images[randomIndex] + '")';
                                // bodyElement.style.backgroundImage = 'url("' + data.background +'")';
                                bodyElement.style.backgroundImage = 'linear-gradient(to bottom, rgba(255, 255, 255, 0.1) 10%, rgba(0, 0, 0, 0.9) 90%), url("' + data.background + '")';

                                const gameStore = document.getElementById('game-store');
                                data.store.forEach(store => {
                                    const storeLink = document.createElement('a');
                                    storeLink.setAttribute('href', store);
                                    storeLink.setAttribute('target', '_blank');
                                    storeLink.classList.add('btn', 'btn-primary', 'mr-2', 'mb-2');
                                    storeLink.textContent = 'Buy from ' + store.split('/')[2];
                                    gameStore.appendChild(storeLink);
                                });

                                // Add animation
                                const gameContainer = document.getElementById('game-container');
                                gameContainer.classList.add('animate__animated', 'animate__fadeIn');
                            })
                            .catch(error => {
                                console.error('Error:', error);
                            });
                            document.getElementById('darkModeSwitch').addEventListener('change', function () {
                                toggleDarkMode();
                            });
                    </script>
                </body>
                </html>
